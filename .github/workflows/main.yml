name: Spring Boot CI

on:
  push:
    branches: [ main ]

env:
  PUBLIC_URL: '104.248.140.51'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Extract values from JSON
      run: |
          echo "vmType=$(jq -r '.vmType' config.json)" >> $GITHUB_ENV
          echo "contractAddress=$(jq -r '.contractAddress' config.json)" >> $GITHUB_ENV
          echo "metricsAddress=$(jq -r '.metricsAddress' config.json)" >> $GITHUB_ENV
          echo "port=$(jq -r '.port' config.json)" >> $GITHUB_ENV
          
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin' # Temurin is the Eclipse Foundation's OpenJDK distribution

    - name: Grant execute permission for gradlew
      run: |
        chmod +x ./gradlew

    - name: Download dependencies
      run: |
        ./gradlew --no-daemon --quiet dependencies

    - name: Fetch and build dependency hash map in JSON format
      run: |
        echo "Downloaded dependencies and their hashes:"
        files=$(find ~/.gradle/caches/modules-2/files-2.1 -type f -name '*.jar')
        echo "{" > deps_hashes.json
        echo -e "\t\"contractAddress\": \"${contractAddress}\"," >> deps_hashes.json
        echo -e "\t\"depsHashesMap\": {" >> deps_hashes.json
        for file in $files; do
          hash=$(sha256sum "$file" | cut -d " " -f1)
          filename=$(basename "$file")
          echo -e "\t\t\"$filename\": \"$hash\"," >> deps_hashes.json
        done
        # Remove the last comma and close the JSON array
        sed -i '$ s/,$//' deps_hashes.json
        echo -e "\t}" >> deps_hashes.json
        echo "}" >> deps_hashes.json

    - name: Print contents of dependency hash map 
      run: |
        cat deps_hashes.json

    - name: Make HTTP GET request with curl - to esm, for dependency check
      run: |
          BASE_URL="$PUBLIC_URL/blockchain/dependency-check"
          PARAMS=""

          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST -H "Content-Type: application/json" -d @deps_hashes.json "${BASE_URL}${PARAMS}")


          if [[ ${RESPONSE} -ge 400 ]]; then
            echo "HTTP error occurred: ${RESPONSE}"
            cat response.json
            exit 1  # Exit with a non-zero status to fail the CI/CD pipeline
          fi

          echo "Success: ${RESPONSE}"

    - name: Build with Gradle
      run: |
        ./gradlew build -x test

    - name: Test with Gradle
      run: |
        ./gradlew test

    - name: Make HTTP GET request with curl - to esm, for deployment
      run: |
          BASE_URL="$PUBLIC_URL/deploy"
          PARAMS="?vmType=$vmType&repoUrl=https://github.com/$GITHUB_REPOSITORY.git&lastCommitHash=${GITHUB_SHA::10}&redeployment=false&metricsAddress=${metricsAddress}&port=${port}&geolocation=romania&publicUrl=$PUBLIC_URL&contractAddress=${contractAddress}"
         
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" "${BASE_URL}${PARAMS}")

          if [[ ${RESPONSE} -ge 400 ]]; then
            echo "HTTP error occurred:: ${RESPONSE}"
            cat response.json
            exit 1  # Exit with a non-zero status to fail the CI/CD pipeline
          fi

          echo "Success: ${RESPONSE}"
